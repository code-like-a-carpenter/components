// This is kind of a goofy hack. So far, there's no compelling reason to write
// scss for this project, however, node-sass's default behavior is _not_ to
// inline `*.css` files that are imported via `@import`. This makes a lot of
// sense in the general case. If you're trying to `@import` a css file, it's
// likely you want to do so at runtime and not compile time. Unfortunately, if
// we're distributing styles via npm, we _do_ want them inlined.
//
// Of course, we could just stick to writing css in this file and be fine,
// right? Well, no. A lot of the functions we want to use at runtime end up
// being run at buildtime if they live in a sass file, so they need to 1. live
// in a css file and 2. be imported via `@use` rather than `@import` so they get
// inlined.
@use 'style.css';

/**
 * Force all p tags in cards to behave like card-text which, in particular,
 * addresses a problematic margin issue when there are multiple bodies or a
 * footer. */
.card-body p {
  @extend .card-text;
}
